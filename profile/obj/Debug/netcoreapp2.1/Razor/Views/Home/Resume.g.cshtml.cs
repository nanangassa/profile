#pragma checksum "/Users/TheKing/Projects/profile/profile/Views/Home/Resume.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "98b8cdb26f363fb3d32bd636a51f541d71b1c981"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Resume), @"mvc.1.0.view", @"/Views/Home/Resume.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/Resume.cshtml", typeof(AspNetCore.Views_Home_Resume))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "/Users/TheKing/Projects/profile/profile/Views/_ViewImports.cshtml"
using profile;

#line default
#line hidden
#line 2 "/Users/TheKing/Projects/profile/profile/Views/_ViewImports.cshtml"
using profile.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"98b8cdb26f363fb3d32bd636a51f541d71b1c981", @"/Views/Home/Resume.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"3ba689b376f5b5779dab1de8dc4c46a70a364036", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Resume : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 4, true);
            WriteLiteral("    ");
            EndContext();
            BeginContext(131, 1, true);
            WriteLiteral("\n");
            EndContext();
            BeginContext(145, 1, true);
            WriteLiteral("\n");
            EndContext();
#line 7 "/Users/TheKing/Projects/profile/profile/Views/Home/Resume.cshtml"
      
        ViewData["Title"] = "Resume";
    

#line default
#line hidden
            BeginContext(197, 38, true);
            WriteLiteral("\n\n    <br />    \n    <br />\n\n\n    <p> ");
            EndContext();
            BeginContext(266, 13, true);
            WriteLiteral("\n        <h2>");
            EndContext();
            BeginContext(280, 17, false);
#line 17 "/Users/TheKing/Projects/profile/profile/Views/Home/Resume.cshtml"
       Write(ViewData["Title"]);

#line default
#line hidden
            EndContext();
            BeginContext(297, 18, true);
            WriteLiteral("</h2>\n        <h3>");
            EndContext();
            BeginContext(316, 19, false);
#line 18 "/Users/TheKing/Projects/profile/profile/Views/Home/Resume.cshtml"
       Write(ViewData["Message"]);

#line default
#line hidden
            EndContext();
            BeginContext(335, 32, true);
            WriteLiteral("</h3>\n\n    <br />\n\n        <ul> ");
            EndContext();
            BeginContext(401, 6744, true);
            WriteLiteral(@"

            <li> FRANCK NANA NGASSA</li>
            <li> Ottawa, ON</li>
            <li> nana.franck@yahoo.com</li>
            <li> Linkedin.com/in/franckngassa</li>
            <li> 343 961 9305</li>


        </ul>
    </p>
        <hr />

        <p>
            <h3> Objective: </h3>  Currently looking for a full-time developer position in a stimulating environment
        </p>

<hr />

    <p> <h3> Summary of qualifications</h3>

    <ul>

    <li> Strong linux experience</li>
    <li> Exposure to various cloud providers</li>
    <li> Excellent database manipulation skills</li>
    <li> Experience in hardware, web and mobile development</li>
    <li> Excellent  team player with the ability to work in a fast-paced environment</li>
    <li> Quick learner, critical thinker, detail oriented with outstanding troubleshooting skills</li>
    <li> Proficient indebugging automated testing, continuous integration and documentation</li>
    <li> Enjoy writing clean, robust and high-quality software as part of");
            WriteLiteral(@" a complex integrated system</li>
    <li> Ability to communicate with the diversity in a technically-oriented interdisciplinary workplace</li>

    </ul>

    </p>

          <h3> Developer skills</h3>
          <table border=""1"">

             <tr>
                <td> Languages </td>
                <td> Java, HTML, CSS, JavaScript, SQL, Go, C, C++, Python, C#, Dart</td>
             </tr>
             <tr>
                <td> Networking </td>
                <td> HTTPS, TCP/IP, UDP, IPV6, Web Sockets, VPN, SSH, WireShark</td>
             </tr>
               <tr>
                <td> Operating Systems </td>
                <td>  Linux, Mac OS X, Windows, Android, iOS, Blackberry, Neutrino RTOS</td>
             </tr>
                  <tr>
                <td> Environments </td>
                <td>  Android Studio, Eclipse, NetBeans, VS Code, Bash, Arduino, QNX Momentics</td>
             </tr>
                  <tr>
                <td> Version Control </td>
                <td> Git, Gitlab, BitBucket");
            WriteLiteral(@", Github</td>
             </tr>

            <tr>
                <td> Cloud</td>
                <td> Heroku, Docker, Kubernetes, VMware, Virtual box, Digital Ocean, AWS, Google Cloud, Bluemix, Azure</td>
             </tr>

             <tr>
                <td> Databases</td>
                <td> Oracle, MySql, MS SQL, MondoDB, Postgres, Firebase, SQLite </td>
             </tr>

             <tr>
                <td> Frameworks</td>
                <td> LAMP, Django, ASP.NET, .NET Core(MVC), Node.js, Flutter</td>
             </tr>
             
                  <tr>
                <td> Quality assurance</td>
                <td> Agile, Kanban, Scrum, Continuous integration, Unit testing</td>
             </tr>



                  <tr>
                <td> Technologies</td>
                <td> Linux Kernel, Restful/Web API, RTOS, JDBC/ODBC, YAML, JSON, XML, CLI, Scripting, IIS, Embedded Systems, Threads, IPC</td>

                      </tr>
          </table>

            <br/> <br/>
          <p>
 ");
            WriteLiteral(@"            <h3> Education </h3>

              Computer Engineering/Computer Science <br/>
              Sep 2016 - April 2019 <br/>
              Algonquin College, Ottawa, ON <br/>

              </p>

        <p>

            <br />
            <br />
              <h4>College Computer Projects</h4>
            <br />
              <h6> Resource managers (Device drivers)</h6>

            <ul>
             <li> https://github.com/nanangassa/RTOS-QNX-Neutrino/tree/master/cst8244_lab6.ws</li>
             <li> https://github.com/nanangassa/RTOS-QNX-Neutrino/tree/master/cst8244_assign1_nana0006s</li>
             <li> https://github.com/nanangassa/RTOS-QNX-Neutrino/tree/master/cst8244_Assign2.wss</li>

        </ul>
          </p>

            <br />

<p>
    <h6> Cross-Platform Mobile Application: https://github.com/nanangassa/FlutterApp</h6>
    We wrote a cross platform android and iOS app using our clientâ€™s REST API that enables political parties to register voters and all their data into a Firebase data");
            WriteLiteral(@"base while also providing their location on a map, showing various records like if they have already voted or not. The project has been done in an agile environment and is at its final stage with unit tests, widget tests and integration testing.
 </p>
            <br />


<p>
    <h6>2018 Prediction Algorithm</h6>
    As part of a competition posted on the Kaggle website by Google, we were challenged to analyze the Google Merchandise Store (also known as GStore, where Google swag is sold) customer dataset to predict revenue per customer by harnessing the power of Artificial intlligence. Several approaches were tried to train a model with one-year data of purchasing history using python, Sklearn, Numpy, panda and neural network architecture.
</p>

            <br />

          <p>
               <h6>2018 Compiler: https://github.com/nanangassa/Compiler </h6>
              The objective of this project was to write the front end of a compiler in four steps using the C programming language. First had to write");
            WriteLiteral(@" the dynamic buffer which could work in three mode, fixed, additive and multiplicative; then came the lexical analyser whose role was to scan the buffer in order to produce a stream of tokens which would be identified as identifiers, keywords or literals by the finite state machine and a transition table. The third step was to implement a symbol table manager and database that would also store variables type, initial values, line numbers and reserved attributes. And the last step was to write a Recursive Descent Predictive Parser in order to move from token to token and identify the syntax of the source code recursively until the end-of-file token.
          </p>

            <br />


          <p>

              <h6>2018 Blog: https://github.com/nanangassa/.NET-C-Sharp</h6> 
              As part of the .Net course where I finished with flying colors I had to write a blog for the final project using the C# programming language with MS SQL server on an azure database and hosted in an IIS environment. The b");
            WriteLiteral(@"log has a registration page for regular users and administrators, blog page with multiple posts where each post can have multiple comments. Finally we have a list of bad word that has to be blurred if posted.

          </p>

            <br />


          <p>

              <h6>2018 Android App</h6>
              With the help of the city of Ottawa, We built an android app that maps the location of every red light camera in Ottawa; we also added user authentication via REST API running on a glassfish server and using Java Server Faces for the web app.
          </p>
            <br />

");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
